// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using terraservice.Infrastructure.DataAccess;

#nullable disable

namespace terraservice.Infrastructure.Migrations
{
    [DbContext(typeof(TerraserviceDbContext))]
    partial class TerraserviceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("terraservice.Domain.Entities.Clients", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<bool>("IsDelited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Ensaios.GranulometriaCompleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDelited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Leitura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PenFino")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PenGrosso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PointId")
                        .HasColumnType("int");

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.ToTable("GranulometriaCompleta");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Ensaios.Umidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capsula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PointId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("ResultMedia")
                        .HasColumnType("float");

                    b.Property<string>("SoloMaisCapsula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoloSecoMaisCapsula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tara")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.ToTable("Umidade");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Points", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PointId"));

                    b.Property<bool>("IsDelited")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PointId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelited")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Ensaios.GranulometriaCompleta", b =>
                {
                    b.HasOne("terraservice.Domain.Entities.Points", "Point")
                        .WithMany("GranulometriaCompleta")
                        .HasForeignKey("PointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Point");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Ensaios.Umidade", b =>
                {
                    b.HasOne("terraservice.Domain.Entities.Points", "Point")
                        .WithMany("Umidades")
                        .HasForeignKey("PointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Point");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Points", b =>
                {
                    b.HasOne("terraservice.Domain.Entities.Projects", "Project")
                        .WithMany("Point")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Projects", b =>
                {
                    b.HasOne("terraservice.Domain.Entities.Clients", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Clients", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Points", b =>
                {
                    b.Navigation("GranulometriaCompleta");

                    b.Navigation("Umidades");
                });

            modelBuilder.Entity("terraservice.Domain.Entities.Projects", b =>
                {
                    b.Navigation("Point");
                });
#pragma warning restore 612, 618
        }
    }
}
